# TODO:
# [x] plexpy
# [x] plex
#   [x] challenge: execute command on host before build
# [x] sonarr
# [x] sabnzbd
# [x] deluge
# [x] timecapsule
#   [x] challenge: create custom network, with all supported settings
# [x] grafana
# [x] go-carbon
# [x] collectd-docker
#   [ ] broken! might be an issue with newer version of docker. look at the logs for the conntainer
# [x] graphite-api
# [x] muximux

---
# XXX: some network features don't work in 3.0-3.3, but work in 2.1, go figure :(
version: '2.1'

networks:
  # 'localnet': this network allows containers to obtain their own IP's on the localnetwork, similar to a VM in bridge mode
  # - For ipv4, an address between 172.25.0.64-95 will be assigned by Docker. For static assignments, see the 'unifi' container config.
  # - For ipv6, docker will not assign an address and the container must acquire an address using SLAAC, which assumes
  #   a router on the localnet providing SLAAC services is available.
  localnet:
    driver: macvlan
    enable_ipv6: true
    driver_opts:
      parent: br0
    ipam:
      config:
        # bogus ipv6 subnet here. The container should use SLAAC to acquire a real ipv6 addr from your router
        - subnet: 2001::0/64
        # 172.25.0.64/27 = 64-95. Don't let your DHCP server assign IP's from this range.
        - subnet: 172.25.0.0/24
          gateway: 172.25.0.1
          ip_range: 172.25.0.64/27

  # 'metrics': a private network for graphite/grafana related services to communicate with each other.
  metrics:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

services:
  tautulli:
    container_name: tautulli
    image: joemiller/tautulli
    build: ./tautulli
    restart: always
    labels:
      collectd_docker_app: tautulli
      collectd_docker_task: tautulli
    environment:
      - PUID=65534
      - PGID=65534
      - ADVANCED_GIT_BRANCH=master
    volumes:
      - /etc/tautulli:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8181:8181"

  muximux:
    container_name: muximux
    image: joemiller/muximux
    build: ./muximux
    restart: always
    labels:
      collectd_docker_app: muximux
      collectd_docker_task: muximux
    environment:
      - PUID=65534
      - PGID=65534
    volumes:
      - /etc/muximux:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8000:80"

  organizr:
    container_name: organizr
    image: joemiller/organizr
    build: ./organizr
    restart: always
    labels:
      collectd_docker_app: organizr
      collectd_docker_task: organizr
    environment:
      - PUID=65534
      - PGID=65534
    volumes:
      - /etc/organizr:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8282:80"

  sabnzbd:
    container_name: sabnzbd
    image: joemiller/sabnzbd
    build: ./sabnzbd
    restart: always
    labels:
      collectd_docker_app: sabnzbd
      collectd_docker_task: sabnzbd
    volumes:
      - /files:/files
      - /etc/sabnzbd:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8085:8085"

  sonarr:
    container_name: sonarr
    image: joemiller/sonarr
    build: ./sonarr
    restart: always
    labels:
      collectd_docker_app: sonarr
      collectd_docker_task: sonarr
    environment:
      - XDG_CONFIG_HOME=/config
    volumes:
      - /files:/files
      - /etc/sonarr:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8989:8989"

  deluge:
    container_name: deluge
    image: joemiller/deluge
    build: ./deluge
    restart: always
    labels:
      collectd_docker_app: deluge
      collectd_docker_task: deluge
    volumes:
      - /files:/files
      - /etc/deluge:/config
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    # ports:
    #   - "8083:8083"
    #   - "53160:53160"

  plex:
    container_name: plex
    image: joemiller/plex
    build: ./plex
    restart: always
    labels:
      collectd_docker_app: plex
      collectd_docker_task: plex
    volumes:
      - /files:/files
      - /etc/plex:/config
      - /etc/localtime:/etc/localtime:ro
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    # ports:
    #   - "32400:32400"

  emby:
    container_name: emby
    image: joemiller/embyserver
    build: ./emby
    restart: always
    labels:
      collectd_docker_app: emby
      collectd_docker_task: emby
    volumes:
      - /files:/files
      - /etc/emby:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - APP_USER=nobody
      - APP_UID=65534
      - APP_GID=65534
    network_mode: host
    devices:
      - /dev/dri:/dev/dri

  timecapsule:
    container_name: timecapsule
    image: joemiller/timecapsule
    build: ./timecapsule
    restart: always
    hostname: timecapsule
    labels:
      collectd_docker_app: timecapsule
      collectd_docker_task: timecapsule
    volumes:
      - /files/timemachine:/timemachine
    networks:
      - localnet

  unifi:
    container_name: unifi
    image: joemiller/unifi
    build: ./unifi
    restart: always
    labels:
      collectd_docker_app: unifi
      collectd_docker_task: unifi
    environment:
      - PUID=65534
      - PGID=65534
    volumes:
      - /etc/unifi:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
        localnet:
          ipv4_address: 172.25.0.65

  grafana:
    container_name: grafana
    image: joemiller/grafana
    build: ./grafana
    restart: always
    labels:
      collectd_docker_app: grafana
      collectd_docker_task: grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - /etc/grafana:/var/lib/grafana
    networks:
      - metrics
    ports:
      - "3000:3000"

  graphite-api:
    container_name: graphite-api
    image: joemiller/graphite-api
    build: ./graphite-api
    restart: always
    labels:
      collectd_docker_app: graphite-api
      collectd_docker_task: graphite-api
    volumes:
      - /etc/graphite-api/graphite-api.yaml:/etc/graphite-api.yaml
      - /etc/go-carbon/data:/data
    networks:
      - metrics

  go-carbon:
    container_name: go-carbon
    image: joemiller/go-carbon
    restart: always
    build: ./go-carbon
    labels:
      collectd_docker_app: graphite-api
      collectd_docker_task: graphite-api
    volumes:
      - /etc/go-carbon/data:/data
      - /etc/go-carbon/config:/config
    networks:
      - metrics
    ports:
      - "2003:2003"
      - "2003:2003/udp"
      - "2004:2004"
      - "7002:7002"
      - "8080:8080"

  # TODO: broken as of Nov-2017. probably not compatible with newest docker
  # collectd-docker:
  #   container_name: collectd-docker
  #   image: bobrik/collectd-docker
  #   restart: always
  #   labels:
  #     collectd_docker_app: collectd-docker
  #     collectd_docker_task: collectd-docker
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - metrics

